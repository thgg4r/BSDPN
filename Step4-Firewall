The pf ruleset below does many things:

 - denies all inbound, except SSH and OpenVPN on non default ports

 - protects SSH from SYN flood, and bruteforce

 - detects accesses to all other ports and blacklist the miscreants for 24H (you cannot expect less from a Blowfish mascot!)

 - allows VPN clients to make DNS requests to unbound on localhost (which uses dnscrypt, as it will be setup in the next part)

 - does not log blocked network traffic from the provider's DHCP


 
 You should modify this ruleset according to your chosen SSH and VPN 
listening ports (we will setup OpenVPN later, but you can choose a 
random port now). The scan detection and 
 blacklisting concept can theoretically backfire, if someone sends 
spoofed packets with trusted IPs. However, as it is implemented, only 
incoming traffic will match the blacklist table. 
 Therefore, if a spoofed packet is sent with a website IP you trust, it 
will not prevent you to access that website at all as your traffic will 
be outbound. Also, as we will write a script
 to parse pf logs and add IPs into the blacklist, we will add an 
exception for our own trusted client computer public IP address to avoid
 being locked out. As a last resort the remote
 console access from the VPS provider could allow us to login, if we 
were totally locked out for any reason. This adaptative behavior is not 
mandatory for your VPN server to be operational,
 but it is useful to block automatic scans on the Internet from querying
 your SSH and VPN ports once they hit your server on another port.


 
 


 $ doas cp /etc/pf.conf /etc/pf.allow.conf

 $ doas nano /etc/pf.conf
 
 -- look in repo for /etc/pf.conf file --
